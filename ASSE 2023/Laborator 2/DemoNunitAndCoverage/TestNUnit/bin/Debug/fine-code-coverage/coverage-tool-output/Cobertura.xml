<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE coverage SYSTEM "http://cobertura.sourceforge.net/xml/coverage-04.dtd">
<coverage line-rate="0.24850910873294665" branch-rate="0.14267901674385464" lines-covered="3042" lines-valid="12241" branches-covered="801" branches-valid="5614" complexity="5580" version="0" timestamp="1634071064">
  <sources />
  <packages>
    <package name="MyUtils" line-rate="1" branch-rate="1" complexity="5">
      <classes>
        <class name="MyUtils.Vector" filename="d:\work\school\cursuri\ASSE\2021-2022\Laborator\Laborator 2\DemoNunitAndCoverage\MyUtils\Vector.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="35" hits="11" branch="false" />
                <line number="36" hits="11" branch="false" />
                <line number="37" hits="11" branch="false" />
              </lines>
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="43" hits="6" branch="false" />
                <line number="44" hits="6" branch="false" />
                <line number="45" hits="6" branch="false" />
              </lines>
            </method>
            <method name="Item" signature="(System.Int32,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="47" hits="3" branch="false" />
                <line number="48" hits="3" branch="false" />
                <line number="49" hits="3" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="5" branch="false" />
                <line number="14" hits="5" branch="false" />
                <line number="15" hits="5" branch="true" condition-coverage="100% (2/2)" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="19" hits="4" branch="false" />
                <line number="20" hits="4" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.Double[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="3" branch="false" />
                <line number="23" hits="3" branch="false" />
                <line number="24" hits="3" branch="true" condition-coverage="100% (4/4)" />
                <line number="25" hits="2" branch="false" />
                <line number="26" hits="2" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="5" branch="false" />
            <line number="14" hits="5" branch="false" />
            <line number="15" hits="5" branch="true" condition-coverage="100% (2/2)" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="19" hits="4" branch="false" />
            <line number="20" hits="4" branch="false" />
            <line number="22" hits="3" branch="false" />
            <line number="23" hits="3" branch="false" />
            <line number="24" hits="3" branch="true" condition-coverage="100% (4/4)" />
            <line number="25" hits="2" branch="false" />
            <line number="26" hits="2" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="35" hits="11" branch="false" />
            <line number="36" hits="11" branch="false" />
            <line number="37" hits="11" branch="false" />
            <line number="43" hits="6" branch="false" />
            <line number="44" hits="6" branch="false" />
            <line number="45" hits="6" branch="false" />
            <line number="47" hits="3" branch="false" />
            <line number="48" hits="3" branch="false" />
            <line number="49" hits="3" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="nunit.framework" line-rate="0.213094677343382" branch-rate="0.11912613355317395" complexity="4937">
      <classes>
        <class name="NUnit.Compatibility.AssemblyExtensions" filename="D:\a\1\s\src\NUnitFramework\framework\Compatibility\ReflectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetCustomAttribute" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Compatibility.AttributeHelper" filename="D:\a\1\s\src\NUnitFramework\framework\Compatibility\AttributeHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetCustomAttributes" signature="(System.Object,System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Compatibility.LongLivedMarshalByRefObject" filename="D:\a\1\s\src\NUnitFramework\framework\Compatibility\LongLivedMarshalByRefObject.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Compatibility.MethodInfoExtensions" filename="D:\a\1\s\src\NUnitFramework\framework\Compatibility\ReflectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateDelegate" signature="(System.Reflection.MethodInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDelegate" signature="(System.Reflection.MethodInfo,System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Compatibility.TypeExtensions" filename="D:\a\1\s\src\NUnitFramework\framework\Compatibility\ReflectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTypeInfo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodInfo" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ApartmentAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\ApartmentAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Threading.ApartmentState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Api.DefaultTestAssemblyBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Api\DefaultTestAssemblyBuilder.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Build" signature="(System.Reflection.Assembly,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Build" signature="(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Build" signature="(System.Reflection.Assembly,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFixtures" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCandidateFixtureTypes" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildTestAssembly" signature="(System.Reflection.Assembly,System.String,System.Collections.Generic.IList`1&lt;NUnit.Framework.Internal.Test&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Api.FrameworkController" filename="D:\a\1\s\src\NUnitFramework\framework\Api\FrameworkController.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Builder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runner" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyNameOrPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyNameOrPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Settings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Settings" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.Assembly,System.String,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.IDictionary,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.Assembly,System.String,System.Collections.IDictionary,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(System.String,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadTests" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ExploreTests" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Action`1&lt;System.String&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="(System.Action`1&lt;System.String&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopRun" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CountTests" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadTests" signature="(System.Web.UI.ICallbackEventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExploreTests" signature="(System.Web.UI.ICallbackEventHandler,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Web.UI.ICallbackEventHandler,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="(System.Web.UI.ICallbackEventHandler,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopRun" signature="(System.Web.UI.ICallbackEventHandler,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CountTests" signature="(System.Web.UI.ICallbackEventHandler,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertEnvironmentElement" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProcessorArchitecture" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="InsertSettingsElement" signature="(NUnit.Framework.Interfaces.TNode,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddSetting" signature="(NUnit.Framework.Interfaces.TNode,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddBackwardsCompatibleDictionaryEntries" signature="(NUnit.Framework.Interfaces.TNode,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddDictionaryEntries" signature="(NUnit.Framework.Interfaces.TNode,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCallbackResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RaiseCallbackEvent" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.FrameworkController,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.FrameworkController,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.FrameworkController,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.FrameworkController,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.FrameworkController,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.FrameworkController,System.Boolean,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Api.NUnitTestAssemblyRunner" filename="D:\a\1\s\src\NUnitFramework\framework\Api\NUnitTestAssemblyRunner.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="DefaultLevelOfParallelism" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadedTest" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadedTest" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Result" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTestLoaded" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTestRunning" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTestComplete" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Settings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Settings" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TopLevelWorkItem" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TopLevelWorkItem" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Api.ITestAssemblyBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.Reflection.Assembly,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CountTestCases" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExploreTests" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Run" signature="(NUnit.Framework.Interfaces.ITestListener,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="(NUnit.Framework.Interfaces.ITestListener,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitForCompletion" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopRun" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartRun" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestExecutionContext" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnRunCompleted" signature="(System.Object,System.EventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CountTestCases" signature="(NUnit.Framework.Interfaces.ITest,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLevelOfParallelism" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="PauseBeforeRun" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WrapInNUnitCallContext" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.Comparisons.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Greater" signature="(System.Int32,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.UInt32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Int64,System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.UInt64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.IComparable,System.IComparable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Greater" signature="(System.IComparable,System.IComparable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Int32,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.UInt32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Int64,System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.UInt64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.IComparable,System.IComparable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Less" signature="(System.IComparable,System.IComparable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Int32,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.UInt32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Int64,System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.UInt64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.IComparable,System.IComparable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterOrEqual" signature="(System.IComparable,System.IComparable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Int32,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.UInt32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Int64,System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.UInt64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.IComparable,System.IComparable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessOrEqual" signature="(System.IComparable,System.IComparable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.Conditions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="True" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotNull" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNull" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Null" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Null" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNull" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNaN" signature="(System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNaN" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNaN" signature="(System.Nullable`1&lt;System.Double&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNaN" signature="(System.Nullable`1&lt;System.Double&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotEmpty" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotEmpty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotEmpty" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotEmpty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="(System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotZero" signature="(System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="(System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Fail" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fail" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fail" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Warn" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warn" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Inconclusive" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Inconclusive" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Inconclusive" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Contains" signature="(System.Object,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Object,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Multiple" signature="(NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Multiple" signature="(NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportFailure" signature="(NUnit.Framework.Constraints.ConstraintResult,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportFailure" signature="(NUnit.Framework.Constraints.ConstraintResult,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportFailure" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IssueWarning" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IncrementAssertCount" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.Equality.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AreEqual" signature="(System.Double,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Nullable`1&lt;System.Double&gt;,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Nullable`1&lt;System.Double&gt;,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Object,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreSame" signature="(System.Object,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreSame" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotSame" signature="(System.Object,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotSame" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertDoublesAreEqual" signature="(System.Double,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.Exceptions.Async.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ThrowsAsync" signature="(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(System.Type,NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(System.Type,NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatchAsync" signature="(NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatchAsync" signature="(NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatchAsync" signature="(System.Type,NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatchAsync" signature="(System.Type,NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatchAsync" signature="(NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatchAsync" signature="(NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotThrowAsync" signature="(NUnit.Framework.AsyncTestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotThrowAsync" signature="(NUnit.Framework.AsyncTestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.Exceptions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Throws" signature="(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Type,NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Type,NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Catch" signature="(NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Catch" signature="(NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Catch" signature="(System.Type,NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Catch" signature="(System.Type,NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Catch" signature="(NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Catch" signature="(NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotThrow" signature="(NUnit.Framework.TestDelegate,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotThrow" signature="(NUnit.Framework.TestDelegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.That.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="That" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Boolean,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Func`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Func`1&lt;System.Boolean&gt;,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.TestDelegate,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.TestDelegate,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.TestDelegate,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ByVal" signature="(System.Object,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ByVal" signature="(System.Object,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assert" filename="D:\a\1\s\src\NUnitFramework\framework\Assert.Types.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAssignableFrom" signature="(System.Type,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotAssignableFrom" signature="(System.Type,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotAssignableFrom" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotAssignableFrom" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotAssignableFrom" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOf" signature="(System.Type,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOf" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOf" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOf" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOf" signature="(System.Type,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOf" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOf" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOf" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.AssertionException" filename="D:\a\1\s\src\NUnitFramework\framework\Exceptions\AssertionException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.AssertionHelper" filename="D:\a\1\s\src\NUnitFramework\framework\AssertionHelper.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Not" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="No" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="All" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Some" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="None" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Null" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NaN" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unique" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BinarySerializable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlSerializable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ordered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(NUnit.Framework.TestDelegate,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Map" signature="(System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exactly" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Property" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SameAs" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterThan" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterThanOrEqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtLeast" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessThan" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessThanOrEqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtMost" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InstanceOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InstanceOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssignableFrom" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignableFrom" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssignableTo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignableTo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EquivalentTo" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubsetOf" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SupersetOf" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Member" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringContaining" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsSubstring" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringStarting" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotStartWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringEnding" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotEndWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringMatching" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SamePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubPathOf" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SamePathOrUnder" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InRange" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Assume" filename="D:\a\1\s\src\NUnitFramework\framework\Assume.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportFailure" signature="(NUnit.Framework.Constraints.ConstraintResult,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Boolean,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Func`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(System.Func`1&lt;System.Boolean&gt;,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(NUnit.Framework.TestDelegate,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="That" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckMultipleAssertLevel" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.AuthorAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\AuthorAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.CategoryAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\CategoryAttribute.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.CollectionAssert" filename="D:\a\1\s\src\NUnitFramework\framework\CollectionAssert.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreInstancesOfType" signature="(System.Collections.IEnumerable,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreInstancesOfType" signature="(System.Collections.IEnumerable,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreNotNull" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreNotNull" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreUnique" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreUnique" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IComparer,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEquivalent" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEquivalent" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IComparer,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEquivalent" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEquivalent" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.IEnumerable,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.IEnumerable,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.Collections.IEnumerable,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.Collections.IEnumerable,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSubsetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSubsetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubsetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubsetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSupersetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSupersetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSupersetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSupersetOf" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotEmpty" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotEmpty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOrdered" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOrdered" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOrdered" signature="(System.Collections.IEnumerable,System.Collections.IComparer,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOrdered" signature="(System.Collections.IEnumerable,System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.CombinatorialAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\CombinatorialAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.CombiningStrategyAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\CombiningStrategyAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ICombiningStrategy,NUnit.Framework.Interfaces.IParameterDataProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AllItemsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AllItemsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AllOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\AllOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ApplyPrefix" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AndConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AndConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.AndConstraint,System.Object,NUnit.Framework.Constraints.ConstraintResult,NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLinesTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AndOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\AndOperator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyOperator" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AnyOfConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AnyOfConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;T,T,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AssignableFromConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AssignableFromConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AssignableToConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AssignableToConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AttributeConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AttributeConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Type,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AttributeExistsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\AttributeExistsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.AttributeOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\AttributeOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reduce" signature="(NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.BinaryConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\BinaryConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.BinaryOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\BinaryOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LeftPrecedence" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RightPrecedence" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reduce" signature="(NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.BinarySerializableConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\BinarySerializableConstraint.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionContainsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionContainsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expected" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TCollectionType,TMemberType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionEquivalentConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionEquivalentConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TActual,TExpected,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionEquivalentConstraintResult" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionEquivalentConstraintResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.CollectionEquivalentConstraint,NUnit.Framework.Constraints.CollectionTally/CollectionTallyResult,System.Object,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLinesTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionItemsEqualConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionItemsEqualConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IgnoringCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UsingExternalComparer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;T,T,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(NUnit.Framework.Constraints.EqualityAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ItemsEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Tally" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\CollectionOperator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionOrderedConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionOrderedConstraint.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ascending" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Descending" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Then" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="By" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="CreateNextStep" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtractValue" signature="(System.Collections.IEnumerable,System.Object,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Direction" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Direction" signature="(NUnit.Framework.Constraints.CollectionOrderedConstraint/OrderDirection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Comparer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Comparer" signature="(NUnit.Framework.Constraints.ComparisonAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ComparerName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ComparerName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Collections.IEnumerable,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLinesTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionSubsetConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionSubsetConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TSubsetType,TSupersetType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionSupersetConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionSupersetConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TSupersetType,TSubsetType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.CollectionTally" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\CollectionTally.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Result" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ItemsEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryRemove" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryRemove" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtraItems" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MissingItems" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.List`1&lt;System.Object&gt;,System.Collections.Generic.List`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.ArraysComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\ArraysComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer,NUnit.Framework.Constraints.Comparers.EnumerablesComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.CharsComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\CharsComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.DateTimeOffsetsComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\DateTimeOffsetsComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.DictionariesComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\DictionariesComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.DictionaryEntriesComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\DictionaryEntriesComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.DirectoriesComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\DirectoriesComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.EnumerablesComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\EnumerablesComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.EquatablesComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\EquatablesComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FirstImplementsIEquatableOfSecond" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEquatableGenericArguments" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeFirstIEquatableEqualsSecond" signature="(System.Object,System.Object,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.KeyValuePairsComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\KeyValuePairsComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.NumericsComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\NumericsComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.StreamsComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\StreamsComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.StringsComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\StringsComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.TimeSpanToleranceComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\TimeSpanToleranceComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.TupleComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\TupleComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCorrectType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.Type,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.TupleComparerBase" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\TupleComparerBase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Comparers.ValueTupleComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Comparers\ValueTupleComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.NUnitEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCorrectType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.Type,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ComparisonAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ComparisonAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ComparisonConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ComparisonConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Percent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Within" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultDescription" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Constraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Constraint.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Builder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Builder" signature="(NUnit.Framework.Constraints.ConstraintBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="And" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="With" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Or" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestObject" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="_displayable" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_BitwiseAnd" signature="(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_BitwiseOr" signature="(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_LogicalNot" signature="(NUnit.Framework.Constraints.Constraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="After" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="After" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Constraints.IResolveConstraint.Resolve" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ConstraintBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ConstraintBuilder.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="IsResolvable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Append" signature="(NUnit.Framework.Constraints.ConstraintOperator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Append" signature="(NUnit.Framework.Constraints.Constraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetTopOperatorRightContext" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReduceOperatorStack" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Top" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ConstraintBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Push" signature="(NUnit.Framework.Constraints.ConstraintOperator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ConstraintBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Push" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ConstraintExpression" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ConstraintExpression.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="Not" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="No" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="All" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Some" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="None" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="One" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="With" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Null" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NaN" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unique" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BinarySerializable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlSerializable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ordered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exist" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ConstraintBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Append" signature="(NUnit.Framework.Constraints.ConstraintOperator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Append" signature="(NUnit.Framework.Constraints.SelfResolvingOperator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Append" signature="(NUnit.Framework.Constraints.Constraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exactly" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Property" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Matches" signature="(NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Predicate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SameAs" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterThan" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterThanOrEqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtLeast" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessThan" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessThanOrEqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtMost" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InstanceOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InstanceOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssignableFrom" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignableFrom" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssignableTo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignableTo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EquivalentTo" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubsetOf" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SupersetOf" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Member" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainKey" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringContaining" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsSubstring" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringStarting" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringEnding" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringMatching" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SamePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubPathOf" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SamePathOrUnder" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InRange" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AnyOf" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ConstraintOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\ConstraintOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LeftContext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LeftContext" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RightContext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RightContext" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LeftPrecedence" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RightPrecedence" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ConstraintResult" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ConstraintResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ActualValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Status" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Status" signature="(NUnit.Framework.Constraints.ConstraintStatus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSuccess" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Object,NUnit.Framework.Constraints.ConstraintStatus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Object,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteMessageTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLinesTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ContainsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ContainsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.DelayedConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\DelayedConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DelayInterval" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelayInterval" signature="(NUnit.Framework.Constraints.Interval)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PollingInterval" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PollingInterval" signature="(NUnit.Framework.Constraints.Interval)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.Interval,NUnit.Framework.Constraints.Interval)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeDelegate" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TimestampOffset" signature="(System.Int64,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TimestampDiff" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MilliSeconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.DelayedConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PollEvery" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.DelayedConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PollEvery" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MilliSeconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.DelayedConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.DictionaryContainsKeyConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\DictionaryContainsKeyConstraint.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expected" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TCollectionType,TMemberType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;T,T,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetContainsKeyMethod" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindContainsKeyMethod" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetBaseTypes" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.DictionaryContainsValueConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\DictionaryContainsValueConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expected" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TCollectionType,TMemberType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EachItemConstraintResult" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EachItemConstraintResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Object,System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLinesTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EmptyCollectionConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EmptyCollectionConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EmptyConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EmptyConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EmptyDirectoryConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EmptyDirectoryConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EmptyStringConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EmptyStringConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EndsWithConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EndsWithConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EqualConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EqualConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Tolerance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CaseInsensitive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClipStrings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClipStrings" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailurePoints" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoClip" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithSameOffset" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ulps" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Percent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Days" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hours" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Milliseconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ticks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Within" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;T,T,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TCollectionType,TMemberType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AdjustArgumentIfNeeded" signature="(T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EqualConstraintResult" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EqualConstraintResult.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.EqualConstraint,System.Object,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteMessageTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayDifferences" signature="(NUnit.Framework.Constraints.MessageWriter,System.Object,System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayStringDifferences" signature="(NUnit.Framework.Constraints.MessageWriter,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayStreamDifferences" signature="(NUnit.Framework.Constraints.MessageWriter,System.IO.Stream,System.IO.Stream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayCollectionDifferences" signature="(NUnit.Framework.Constraints.MessageWriter,System.Collections.ICollection,System.Collections.ICollection,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayTypesAndSizes" signature="(NUnit.Framework.Constraints.MessageWriter,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayFailurePoint" signature="(NUnit.Framework.Constraints.MessageWriter,System.Collections.IEnumerable,System.Collections.IEnumerable,NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValueFromCollection" signature="(System.Collections.ICollection,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayEnumerableDifferences" signature="(NUnit.Framework.Constraints.MessageWriter,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.EqualityAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\EqualityAdapter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanCompare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Func`3&lt;TExpected,TActual,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="For" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanCompare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`3&lt;TActual,TExpected,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanCompare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CastOrThrow" signature="(System.Object,System.Object,T&amp;,T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ExactCountConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ExactCountConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ExactCountConstraintResult" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ExactCountConstraintResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,System.Object,System.Boolean,System.Int32,System.Collections.Generic.ICollection`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ExactCountOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\ExactCountOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reduce" signature="(NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ExactTypeConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ExactTypeConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ExceptionNotThrownConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ExceptionNotThrownConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ExceptionTypeConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ExceptionTypeConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ExceptionTypeConstraint,System.Object,System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.FalseConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\FalseConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.FileExistsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\FileExistsConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\FileOrDirectoryExistsConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IgnoreDirectories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreFiles" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorSubstring" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckString" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.FloatingPointNumerics" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\FloatingPointNumerics.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AreAlmostEqualUlps" signature="(System.Single,System.Single,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreAlmostEqualUlps" signature="(System.Double,System.Double,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.GreaterThanConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\GreaterThanConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformComparison" signature="(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.GreaterThanOrEqualConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\GreaterThanOrEqualConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformComparison" signature="(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.InstanceOfTypeConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\InstanceOfTypeConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Interval" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Interval.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="AsTimeSpan" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsTimeSpan" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InMinutes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InSeconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InMilliseconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotZero" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ItemsConstraintExpression" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ItemsConstraintExpression.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Items" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ConstraintBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.LessThanConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\LessThanConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformComparison" signature="(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.LessThanOrEqualConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\LessThanOrEqualConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformComparison" signature="(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.MessageWriter" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\MessageWriter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteMessageLine" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.MsgUtils" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\MsgUtils.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DefaultValueFormatter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueFormatter" signature="(NUnit.Framework.Constraints.ValueFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddFormatter" signature="(NUnit.Framework.Constraints.ValueFormatterFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatCollection" signature="(System.Collections.IEnumerable,System.Int64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatArray" signature="(System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryFormatKeyValuePair" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatKeyValuePair" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValueFromTuple" signature="(System.Type,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValueFromValueTuple" signature="(System.Type,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryFormatTuple" signature="(System.Object,System.Func`2&lt;System.Type,System.Boolean&gt;,System.Func`4&lt;System.Type,System.String,System.Object,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatTuple" signature="(System.Object,System.Boolean,System.Func`4&lt;System.Type,System.String,System.Object,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatDouble" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatFloat" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatDecimal" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatDateTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatDateTimeOffset" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeRepresentation" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeControlChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeNullCharacters" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArrayIndicesAsString" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArrayIndicesFromCollectionIndex" signature="(System.Collections.IEnumerable,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClipString" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClipExpectedAndActual" signature="(System.String&amp;,System.String&amp;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMismatchPosition" signature="(System.String,System.String,System.Int32,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NaNConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\NaNConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NoItemConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\NoItemConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NoneOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\NoneOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ApplyPrefix" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NotConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\NotConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NotOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\NotOperator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyPrefix" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NullConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\NullConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Numerics" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Numerics.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsNumericType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFloatingPointNumeric" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFixedPointNumeric" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Double,NUnit.Framework.Constraints.Tolerance&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Single,System.Single,NUnit.Framework.Constraints.Tolerance&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Decimal,System.Decimal,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.UInt64,System.UInt64,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Int64,System.Int64,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.UInt32,System.UInt32,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Int32,System.Int32,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NUnitComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\NUnitComparer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.NUnitEqualityComparer" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\NUnitEqualityComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareAsCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareAsCollection" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExternalComparers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailurePoints" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithSameOffset" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithSameOffset" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance&amp;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExternalComparer" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.OrConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\OrConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.OrOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\OrOperator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyOperator" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PathConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\PathConstraint.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="RespectCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Canonicalize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubPath" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PredicateConstraint`1" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\PredicateConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PrefixConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\PrefixConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BaseConstraint" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseConstraint" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DescriptionPrefix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DescriptionPrefix" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatDescription" signature="(System.String,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PrefixOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\PrefixOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Reduce" signature="(NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PropertyConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\PropertyConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String,NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PropertyConstraintResult" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\PropertyConstraintResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLinesTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PropertyExistsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\PropertyExistsConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.PropOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\PropOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reduce" signature="(NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.RangeConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\RangeConstraint.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareFromAndTo" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.RegexConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\RegexConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ResolvableConstraintExpression" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ResolvableConstraintExpression.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="And" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Or" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ConstraintBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Constraints.IResolveConstraint.Resolve" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ReusableConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ReusableConstraint.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(NUnit.Framework.Constraints.Constraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Resolve" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SameAsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\SameAsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SamePathConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\SamePathConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SamePathOrUnderConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\SamePathOrUnderConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SomeItemsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\SomeItemsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Func`3&lt;TCollectionType,TMemberType,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Comparison`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckPrecondition" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SomeOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\SomeOperator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ApplyPrefix" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.StartsWithConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\StartsWithConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.StringConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\StringConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SubPathConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\SubPathConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.SubstringConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\SubstringConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ThrowsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ThrowsConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ActualException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ThrowsConstraint,System.Exception,NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ThrowsExceptionConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ThrowsExceptionConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Constraints.ThrowsExceptionConstraint,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValueTo" signature="(NUnit.Framework.Constraints.MessageWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ThrowsNothingConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\ThrowsNothingConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.ThrowsOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\ThrowsOperator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reduce" signature="(NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.Tolerance" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Tolerance.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exact" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Percent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ulps" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Days" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hours" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Milliseconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ticks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Amount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsUnsetOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,NUnit.Framework.Constraints.ToleranceMode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckLinearAndNumeric" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="LinearRange" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PercentRange" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.TrueConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\TrueConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.TypeConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\TypeConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.UniqueItemsConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\UniqueItemsConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OriginalAlgorithm" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryFastAlgorithm" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSealed" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ItemsUnique" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringsUniqueIgnoringCase" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharsUniqueIgnoringCase" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsHandledSpeciallyByNUnit" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericTypeArgument" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.WithOperator" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\Operators\WithOperator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyPrefix" signature="(NUnit.Framework.Constraints.IConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Constraints.XmlSerializableConstraint" filename="D:\a\1\s\src\NUnitFramework\framework\Constraints\XmlSerializableConstraint.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyTo" signature="(TActual)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringRepresentation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Contains" filename="D:\a\1\s\src\NUnitFramework\framework\Contains.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Item" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Key" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Substring" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.CultureAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\CultureAttribute.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCultureSupported" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="IsCultureSupported" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCultureSupported" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.DataAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\DataAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.DefaultFloatingPointToleranceAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\DefaultFloatingPointToleranceAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.DescriptionAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\DescriptionAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.DirectoryAssert" filename="D:\a\1\s\src\NUnitFramework\framework\DirectoryAssert.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.IO.DirectoryInfo,System.IO.DirectoryInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.IO.DirectoryInfo,System.IO.DirectoryInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.IO.DirectoryInfo,System.IO.DirectoryInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.IO.DirectoryInfo,System.IO.DirectoryInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.IO.DirectoryInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.IO.DirectoryInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.IO.DirectoryInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.IO.DirectoryInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Does" filename="D:\a\1\s\src\NUnitFramework\framework\Does.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Not" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exist" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainKey" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ExplicitAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\ExplicitAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Extensions" filename="D:\a\1\s\src\NUnitFramework\framework\Extensions.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="IsStatic" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAttribute" signature="(System.Reflection.ICustomAttributeProvider,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAttribute" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttributes" signature="(System.Reflection.ICustomAttributeProvider,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttributes" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttributes" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skip" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.FileAssert" filename="D:\a\1\s\src\NUnitFramework\framework\FileAssert.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.IO.Stream,System.IO.Stream,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.IO.Stream,System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.IO.FileInfo,System.IO.FileInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.IO.FileInfo,System.IO.FileInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.IO.Stream,System.IO.Stream,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.IO.Stream,System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.IO.FileInfo,System.IO.FileInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.IO.FileInfo,System.IO.FileInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.IO.FileInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.IO.FileInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.IO.FileInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.IO.FileInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Guard" filename="D:\a\1\s\src\NUnitFramework\framework\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentInRange" signature="(System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OperationValid" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotAsyncVoid" signature="(System.Delegate,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotAsyncVoid" signature="(System.Reflection.MethodInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Has" filename="D:\a\1\s\src\NUnitFramework\framework\Has.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="No" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="All" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Some" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="None" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="One" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exactly" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Property" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Member" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.IgnoreAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\IgnoreAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Until" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Until" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.IgnoreException" filename="D:\a\1\s\src\NUnitFramework\framework\Exceptions\IgnoreException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.IncludeExcludeAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\IncludeExcludeAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Include" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Include" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exclude" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exclude" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.InconclusiveException" filename="D:\a\1\s\src\NUnitFramework\framework\Exceptions\InconclusiveException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.AssertionResult" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\AssertionResult.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Status" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.AssertionStatus,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.AttributeDictionary" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\TNode.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Item" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.ResultState" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\ResultState.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Status" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Label" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Site" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.TestStatus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.TestStatus,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.TestStatus,NUnit.Framework.Interfaces.FailureSite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.TestStatus,System.String,NUnit.Framework.Interfaces.FailureSite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithSite" signature="(NUnit.Framework.Interfaces.FailureSite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(NUnit.Framework.Interfaces.ResultState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Equality" signature="(NUnit.Framework.Interfaces.ResultState,NUnit.Framework.Interfaces.ResultState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Inequality" signature="(NUnit.Framework.Interfaces.ResultState,NUnit.Framework.Interfaces.ResultState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.TestAttachment" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\TestAttachment.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FilePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.TestMessage" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\TestMessage.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Destination" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToXml" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.TestOutput" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\TestOutput.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToXml" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Interfaces.TNode" filename="D:\a\1\s\src\NUnitFramework\framework\Interfaces\TNode.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueIsCDATA" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attributes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChildNodes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FirstChild" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OuterXml" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromXml" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddElement" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddElement" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddElementWithCDATA" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddAttribute" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectSingleNode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectNodes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteTo" signature="(System.Xml.XmlWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromXml" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplySelection" signature="(NUnit.Framework.Interfaces.NodeList,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeInvalidXmlCharacters" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharToUnicodeSequence" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteCDataTo" signature="(System.Xml.XmlWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.AssemblyHelper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\AssemblyHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetAssemblyPath" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDirectoryName" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyName" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFileUri" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyPathFromCodeBase" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.AsyncToSyncAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\AsyncToSyncAdapter.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="IsAsyncOperation" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAsyncOperation" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Await" signature="(System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeExecutionEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="SetSynchronizationContext" signature="(System.Threading.SynchronizationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.AwaitAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\AwaitAdapter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAwaitable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetResultType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromAwaitable" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.CombinatorialStrategy" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\CombinatorialStrategy.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTestCases" signature="(System.Collections.IEnumerable[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.DatapointProvider" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\DatapointProvider.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="HasDataFor" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataFor" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeFromMemberInfo" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetElementTypeFromMemberInfo" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.DefaultSuiteBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\DefaultSuiteBuilder.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CanBuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo,NUnit.Framework.Interfaces.IPreFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildMultipleFixtures" signature="(NUnit.Framework.Interfaces.ITypeInfo,System.Collections.Generic.IEnumerable`1&lt;NUnit.Framework.Internal.TestSuite&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFixtureBuilderAttributes" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasArguments" signature="(NUnit.Framework.Interfaces.IFixtureBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\DefaultTestCaseBuilder.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CanBuildFrom" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBuildFrom" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildParameterizedMethodSuite" signature="(NUnit.Framework.Interfaces.IMethodInfo,System.Collections.Generic.IEnumerable`1&lt;NUnit.Framework.Internal.TestMethod&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildSingleTestMethod" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.NamespaceTreeBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\NamespaceTreeBuilder.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RootSuite" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RootSuite" signature="(NUnit.Framework.Internal.TestSuite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestSuite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Collections.Generic.IList`1&lt;NUnit.Framework.Internal.Test&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(NUnit.Framework.Internal.TestSuite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNamespaceForFixture" signature="(NUnit.Framework.Internal.TestSuite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNamespaceSuite" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddSetUpFixture" signature="(NUnit.Framework.Internal.TestSuite,NUnit.Framework.Internal.TestSuite,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\NUnitTestCaseBuilder.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BuildTestMethod" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test,NUnit.Framework.Internal.TestCaseParameters)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckTestMethodAttributes" signature="(NUnit.Framework.Internal.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckTestMethodSignature" signature="(NUnit.Framework.Internal.TestMethod,NUnit.Framework.Internal.TestCaseParameters)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MarkAsNotRunnable" signature="(NUnit.Framework.Internal.TestMethod,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\NUnitTestFixtureBuilder.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo,NUnit.Framework.Interfaces.IPreFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo,NUnit.Framework.Interfaces.IPreFilter,NUnit.Framework.Interfaces.ITestFixtureData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTestCasesToFixture" signature="(NUnit.Framework.Internal.TestFixture,NUnit.Framework.Interfaces.IPreFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildTestCase" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.TestSuite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckTestFixtureIsValid" signature="(NUnit.Framework.Internal.TestFixture)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.PairwiseStrategy" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\PairwiseStrategy.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="GetTestCases" signature="(System.Collections.IEnumerable[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateValueSet" signature="(System.Collections.IEnumerable[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDimensions" signature="(System.Collections.Generic.List`1&lt;System.Object&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Next" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Batch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureInfo,NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTupleCovered" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureTuple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCases" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNextRandomNumber" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateAllTuples" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="CreateTuples" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNextTuple" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="CreateTestCase" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureTuple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateRandomTestCase" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureTuple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaximizeCoverage" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/TestCaseInfo,NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureTuple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMutableDimensions" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/FeatureTuple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ScrambleDimensions" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaximizeCoverageForDimension" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/TestCaseInfo,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CountTuplesCoveredByTest" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/TestCaseInfo,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveTuplesCoveredByTest" signature="(NUnit.Framework.Internal.Builders.PairwiseStrategy/TestCaseInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.ParameterDataProvider" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\ParameterDataProvider.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IParameterDataProvider[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasDataFor" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataFor" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.ParameterDataSourceProvider" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\ParameterDataSourceProvider.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="HasDataFor" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataFor" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.ProviderCache" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\ProviderCache.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="GetInstanceOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInstanceOf" signature="(System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Builders.SequentialStrategy" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Builders\SequentialStrategy.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTestCases" signature="(System.Collections.IEnumerable[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.AfterTestActionCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\AfterTestActionCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.TestActionItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.AfterTestCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\AfterTestCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.ApplyChangesToContextCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\ApplyChangesToContextCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Interfaces.IApplyToContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.BeforeAndAfterTestCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\BeforeAndAfterTestCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestMethodInThreadAbortSafeZone" signature="(NUnit.Framework.Internal.TestExecutionContext,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.BeforeTestActionCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\BeforeTestActionCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.TestActionItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.BeforeTestCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\BeforeTestCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.ConstructFixtureCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\ConstructFixtureCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.DelegatingTestCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\DelegatingTestCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.DisposeFixtureCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\DisposeFixtureCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.EmptyTestCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\EmptyTestCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.MaxTimeCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\MaxTimeCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.OneTimeSetUpCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\OneTimeSetUpCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.SetUpTearDownItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.OneTimeTearDownCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\OneTimeTearDownCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.SetUpTearDownItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.SetUpTearDownCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\SetUpTearDownCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.SetUpTearDownItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.SetUpTearDownItem" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\SetUpTearDownItem.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="HasMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IList`1&lt;System.Reflection.MethodInfo&gt;,System.Collections.Generic.IList`1&lt;System.Reflection.MethodInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunSetUp" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTearDown" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunSetUpOrTearDownMethod" signature="(NUnit.Framework.Internal.TestExecutionContext,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeMethod" signature="(System.Reflection.MethodInfo,NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.SkipCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\SkipCommand.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSkipReason" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetProviderStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.TestActionCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\TestActionCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.ITestAction)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.TestActionItem" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\TestActionItem.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BeforeTestWasRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeforeTestWasRun" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.ITestAction)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeforeTest" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTest" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.TestCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\TestCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.TestMethodCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\TestMethodCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestMethod" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeTestMethod" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.TheoryResultCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\TheoryResultCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Commands.TimeoutCommand" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Commands\TimeoutCommand.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ConstraintUtils" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ConstraintUtils.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RequireActual" signature="(System.Object,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.CSharpPatternBasedAwaitAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\CSharpPatternBasedAwaitAdapter.AwaitShapeInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryCreate" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateAwaitAdapter" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.CSharpPatternBasedAwaitAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\CSharpPatternBasedAwaitAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TryCreate" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAwaitable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetResultType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetShapeInfo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.CSharpPatternBasedAwaitAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\CSharpPatternBasedAwaitAdapter.ReflectionAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsCompleted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnCompleted" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.CultureDetector" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\CultureDetector.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCultureSupported" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCultureSupported" signature="(NUnit.Framework.CultureAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCultureSupported" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.DefaultBlockingAwaitAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\DefaultBlockingAwaitAdapter.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="BlockUntilCompleted" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ExceptionHelper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ExceptionHelper.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Rethrow" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildMessage" signature="(System.Exception,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildStackTrace" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSafeStackTrace" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExceptionMessage" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExceptionDataContents" signature="(System.Exception,System.Text.StringBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FlattenExceptionHierarchy" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordException" signature="(System.Delegate,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.CompositeWorkItem" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\CompositeWorkItem.cs" line-rate="1" branch-rate="1" complexity="49">
          <methods>
            <method name="Children" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsolateChildTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestSuite,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformWork" signature="()" line-rate="1" branch-rate="1" complexity="14">
              <lines />
            </method>
            <method name="CheckForCancellation" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="InitializeSetUpAndTearDownCommands" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="MakeOneTimeSetUpCommand" signature="(System.Collections.Generic.List`1&lt;NUnit.Framework.Internal.Commands.SetUpTearDownItem&gt;,System.Collections.Generic.List`1&lt;NUnit.Framework.Internal.Commands.TestActionItem&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeOneTimeTearDownCommand" signature="(System.Collections.Generic.List`1&lt;NUnit.Framework.Internal.Commands.SetUpTearDownItem&gt;,System.Collections.Generic.List`1&lt;NUnit.Framework.Internal.Commands.TestActionItem&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformOneTimeSetUp" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="RunChildren" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="SkipFixture" signature="(NUnit.Framework.Interfaces.ResultState,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipChildren" signature="(NUnit.Framework.Internal.Execution.CompositeWorkItem,NUnit.Framework.Interfaces.ResultState,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformOneTimeTearDown" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetSkipReason" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetProviderStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnChildItemCompleted" signature="(System.Object,System.EventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnAllChildItemsCompleted" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Cancel" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionStrategy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Execution.CompositeWorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
            <method name="PerformWork" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.EventListenerTextWriter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventListenerTextWriter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Encoding" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySendToListener" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrySendLineToListener" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Char[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Char[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.EventPump" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventPump.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="PumpState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestListener,NUnit.Framework.Internal.Execution.EventQueue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Stop" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="PumpThreadProc" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.EventQueue" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventQueue.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enqueue" signature="(NUnit.Framework.Internal.Execution.Event)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dequeue" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stop" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.MainThreadWorkItemDispatcher" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\MainThreadWorkItemDispatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LevelOfParallelism" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatch" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancelRun" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.ParallelWorkItemDispatcher" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\ParallelWorkItemDispatcher.cs" line-rate="1" branch-rate="1" complexity="25">
          <methods>
            <method name="LevelOfParallelism" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelShift" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NonParallelShift" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NonParallelSTAShift" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelSTAQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NonParallelQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NonParallelSTAQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeShifts" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="OnStartNonParallelWorkItem" signature="(NUnit.Framework.Internal.Execution.TestWorker,NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitialExecutionStrategy" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatch" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatch" signature="(NUnit.Framework.Internal.Execution.WorkItem,NUnit.Framework.Internal.Execution.ParallelExecutionStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancelRun" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsolateQueues" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryRestoreQueues" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="OnEndOfShift" signature="(NUnit.Framework.Internal.Execution.WorkShift)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectNextShift" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="get_Shifts" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="get_Queues" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.QueuingEventListener" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\QueuingEventListener.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Events" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TestStarted" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFinished" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutput" signature="(NUnit.Framework.Interfaces.TestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(NUnit.Framework.Interfaces.TestMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.SimpleWorkItem" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\SimpleWorkItem.cs" line-rate="1" branch-rate="1" complexity="26">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestMethod,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformWork" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="MakeTestCommand" signature="()" line-rate="1" branch-rate="1" complexity="24">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.SimpleWorkItemDispatcher" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\SimpleWorkItemDispatcher.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="LevelOfParallelism" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatch" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerThreadProc" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CancelRun" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.TestFinishedEvent" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventQueue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.TestMessageEvent" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventQueue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.TestMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.TestOutputEvent" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventQueue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.TestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.TestStartedEvent" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\EventQueue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.TestWorker" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\TestWorker.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="WorkQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAlive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Execution.WorkItemQueue,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestWorkerThreadProc" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Cancel" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.TextCapture" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\TextCapture.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Encoding" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.WorkItem" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\WorkItem.cs" line-rate="1" branch-rate="1" complexity="24">
          <methods>
            <method name="State" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="State" signature="(NUnit.Framework.Internal.Execution.WorkItemState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Filter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestWorker" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestWorker" signature="(NUnit.Framework.Internal.Execution.TestWorker)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionStrategy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsolateChildTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Result" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Result" signature="(NUnit.Framework.Internal.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelScope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetApartment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetApartment" signature="(System.Threading.ApartmentState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentApartment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentApartment" signature="(System.Threading.ApartmentState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Test,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="WaitForCompletion" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MarkNotRunnable" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cancel" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="WorkItemComplete" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="BuildSetUpTearDownList" signature="(System.Reflection.MethodInfo[],System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildNode" signature="(System.Type,System.Collections.Generic.IList`1&lt;System.Reflection.MethodInfo&gt;,System.Collections.Generic.IList`1&lt;System.Reflection.MethodInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMethodsByDeclaringType" signature="(System.Type,System.Collections.Generic.IList`1&lt;System.Reflection.MethodInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChangeResult" signature="(NUnit.Framework.Interfaces.ResultState,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunOnSeparateThread" signature="(System.Threading.ApartmentState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunOnCurrentThread" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetExecutionStrategy" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
            <method name="GetTargetApartment" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.WorkItemBuilder" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\WorkItemBuilder.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateWorkItem" signature="(NUnit.Framework.Interfaces.ITest,NUnit.Framework.Interfaces.ITestFilter,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(NUnit.Framework.Internal.Execution.WorkItem,NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.WorkItemQueue" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\WorkItemQueue.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsParallelQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetApartment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ItemsProcessed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ItemsProcessed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="State" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="State" signature="(NUnit.Framework.Internal.Execution.WorkItemQueueState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Boolean,System.Threading.ApartmentState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeQueues" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Enqueue" signature="(NUnit.Framework.Internal.Execution.WorkItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enqueue" signature="(NUnit.Framework.Internal.Execution.WorkItem,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dequeue" signature="()" line-rate="1" branch-rate="1" complexity="12">
              <lines />
            </method>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Stop" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Pause" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Save" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Restore" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="DumpContents" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Execution.WorkItemQueue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Execution.WorkShift" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\WorkShift.cs" line-rate="1" branch-rate="1" complexity="15">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsActive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsActive" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasWork" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Queues" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Workers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddQueue" signature="(NUnit.Framework.Internal.Execution.WorkItemQueue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assign" signature="(NUnit.Framework.Internal.Execution.TestWorker)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="StartWorkers" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="EndShift" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ShutDown" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Cancel" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.AndFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\AndFilter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestFilter[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExplicitMatch" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.CategoryFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\CategoryFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.ClassNameFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\ClassNameFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.CompositeFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\CompositeFilter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Filters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestFilter[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.FullNameFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\FullNameFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.IdFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\IdFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.MethodNameFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\MethodNameFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.NamespaceFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\NamespaceFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.NotFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\NotFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BaseFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExplicitMatch" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.OrFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\OrFilter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestFilter[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExplicitMatch" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.PropertyFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\PropertyFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.TestNameFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\TestNameFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Filters.ValueMatchFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Filters\ValueMatchFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExpectedValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegex" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.GenericMethodHelper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\GenericMethodHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeParms" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeArgs" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParmTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetTypeArguments" signature="(System.Object[],System.Type[]&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryApplyArgType" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyArgType" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableToGenericType" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.InternalTrace" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Logging\InternalTrace.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Initialized" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialized" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(System.String,NUnit.Framework.Internal.InternalTraceLevel)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(System.IO.TextWriter,NUnit.Framework.Internal.InternalTraceLevel)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLogger" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLogger" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.InternalTraceWriter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Logging\InternalTraceWriter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Encoding" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Flush" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.InvalidDataSourceException" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\InvalidDataSourceException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.InvalidPlatformException" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\InvalidPlatformException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.InvalidTestFixtureException" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\InvalidTestFixtureException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Logger" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Logging\Logger.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String,NUnit.Framework.Internal.InternalTraceLevel,System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Error" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Error" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warning" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warning" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Info" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Info" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Debug" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Debug" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(NUnit.Framework.Internal.InternalTraceLevel,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(NUnit.Framework.Internal.InternalTraceLevel,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLog" signature="(NUnit.Framework.Internal.InternalTraceLevel,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.MessagePumpStrategy" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\MessagePumpStrategy.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="FromCurrentSynchronizationContext" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ContinueOnSameSynchronizationContext" signature="(NUnit.Framework.Internal.AwaitAdapter,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WaitForCompletion" signature="(NUnit.Framework.Internal.AwaitAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WaitForCompletion" signature="(NUnit.Framework.Internal.AwaitAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WaitForCompletion" signature="(NUnit.Framework.Internal.AwaitAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WaitForCompletion" signature="(NUnit.Framework.Internal.AwaitAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.MethodWrapper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\MethodWrapper.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="TypeInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeInfo" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodInfo" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPublic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsGenericParameters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericMethodDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameters" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MakeGenericMethod" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDefined" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Net40BclTaskAwaitAdapter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Net40BclTaskAwaitAdapter.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="Create" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCompleted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Threading.Tasks.Task)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnCompleted" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BlockUntilCompleted" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsCompleted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Threading.Tasks.Task`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnCompleted" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BlockUntilCompleted" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetResult" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.NUnitCallContext" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\NUnitCallContext.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.NUnitException" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\NUnitException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.On" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\On.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Dispose" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.OSPlatform" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\OSPlatform.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="CurrentPlatform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Platform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Product" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWindows" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsUnix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin32S" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin32Windows" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin32NT" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWinCE" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsXbox" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMacOSX" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin95" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin98" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWinME" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT3" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT4" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT5" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2K" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWinXP" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2003Server" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT6" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT60" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT61" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT62" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNT63" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsVista" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2008Server" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2008ServerR1" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2008ServerR2" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2012Server" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2012ServerR1" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWin2012ServerR2" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWindows7" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWindows8" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWindows81" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWindows10" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWindowsServer10" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetWindows81PlusVersion" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.PlatformID,System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.PlatformID,System.Version,NUnit.Framework.Internal.OSPlatform/ProductType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="CheckIfIsMacOSX" signature="(System.PlatformID)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ParamAttributeTypeConversions" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ParamAttributeTypeConversions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConvertData" signature="(System.Object[],System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(System.Object[],System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Convert" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryConvert" signature="(System.Object,System.Type,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ParameterizedFixtureSuite" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\ParameterizedFixtureSuite.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.ParameterizedFixtureSuite,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Copy" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ParameterizedMethodSuite" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\ParameterizedMethodSuite.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.ParameterizedMethodSuite,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Copy" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ParameterWrapper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ParameterWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsOptional" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterInfo" signature="(System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IMethodInfo,System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDefined" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.PlatformHelper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\PlatformHelper.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.OSPlatform,NUnit.Framework.Internal.RuntimeFramework)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPlatformSupported" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPlatformSupported" signature="(NUnit.Framework.PlatformAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPlatformSupported" signature="(NUnit.Framework.TestCaseAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPlatformSupported" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPlatformSupported" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRuntimeSupported" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRuntimeSupported" signature="(NUnit.Framework.Internal.RuntimeType,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNetCoreRuntimeSupported" signature="(NUnit.Framework.Internal.RuntimeType,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.PreFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\PreFilter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatch" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatch" signature="(System.Type,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchUnknownElement" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchFixtureElement" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchNamespaceElement" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchMethodElement" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.PropertyBag" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\PropertyBag.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.String,System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Set" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsKey" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToXml" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Randomizer" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Randomizer.cs" line-rate="1" branch-rate="1" complexity="21">
          <methods>
            <method name="InitialSeed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitialSeed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetRandomizer" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRandomizer" signature="(System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateRandomizer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextUInt" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextUInt" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextUInt" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextShort" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextShort" signature="(System.Int16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextShort" signature="(System.Int16,System.Int16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextUShort" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextUShort" signature="(System.UInt16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextUShort" signature="(System.UInt16,System.UInt16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextLong" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextLong" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextLong" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextULong" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextULong" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextULong" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextByte" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextByte" signature="(System.Byte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextByte" signature="(System.Byte,System.Byte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextSByte" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextSByte" signature="(System.SByte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextSByte" signature="(System.SByte,System.SByte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextBool" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextBool" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextDouble" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextDouble" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextFloat" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextFloat" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextFloat" signature="(System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextEnum" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetString" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetString" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextDecimal" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextDecimal" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextDecimal" signature="(System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextGuid" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RawUInt" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RawUShort" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RawULong" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RawLong" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RawDecimal" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Reflect" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Reflect.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetMethodsWithAttribute" signature="(System.Type,System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMethodWithAttribute" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Construct" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Construct" signature="(System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeArray" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConstructors" signature="(System.Type,System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParametersMatch" signature="(System.Reflection.ParameterInfo[],System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanImplicitlyConvertTo" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeMethod" signature="(System.Reflection.MethodInfo,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeMethod" signature="(System.Reflection.MethodInfo,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetUltimateShadowingProperty" signature="(System.Type,System.String,System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFromNull" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNonGenericPublicInstanceMethod" signature="(System.Type,System.String,System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPublicInstanceProperty" signature="(System.Type,System.String,System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeWithTransparentExceptions" signature="(System.Reflection.MethodBase,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DynamicInvokeWithTransparentExceptions" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Compare" signature="(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeAndBaseTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.RuntimeFramework" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\RuntimeFramework.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="CurrentFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FrameworkVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FrameworkVersion" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClrVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClrVersion" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowAnyVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.RuntimeType,System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitFromFrameworkVersion" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowInvalidFrameworkVersion" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitFromClrVersion" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parse" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Supports" signature="(NUnit.Framework.Internal.RuntimeFramework)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNetCore" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsNetCore_Internal" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsRuntimeTypeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultDisplayName" signature="(NUnit.Framework.Internal.RuntimeType,System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VersionsMatch" signature="(System.Version,System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.SandboxedThreadState" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\SandboxedThreadState.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Culture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UICulture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Principal" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Security.Principal.IPrincipal,System.Threading.SynchronizationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Capture" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Restore" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithCulture" signature="(System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithUICulture" signature="(System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithPrincipal" signature="(System.Security.Principal.IPrincipal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.SetUpFixture" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\SetUpFixture.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.SetUpFixture,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Copy" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.SingleThreadedTestSynchronizationContext" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\SingleThreadedSynchronizationContext.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name=".ctor" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Post" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddWork" signature="(NUnit.Framework.Internal.SingleThreadedTestSynchronizationContext/ScheduledWork)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShutDown" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Run" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="TryTake" signature="(NUnit.Framework.Internal.SingleThreadedTestSynchronizationContext/ScheduledWork&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorAndGetExceptionForShutdownTimeout" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.SingleThreadedTestSynchronizationContext" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\SingleThreadedTestSynchronizationContext.ScheduledWork.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.Threading.SendOrPostCallback,System.Object,System.Threading.ManualResetEventSlim)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.StackFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\StackFilter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Filter" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.StringUtil" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\StringUtil.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Compare" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StringsEqual" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.Test" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\Test.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Id" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Id" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeInfo" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="(NUnit.Framework.Interfaces.RunState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="(NUnit.Framework.Interfaces.IPropertyBag)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSuite" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fixture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fixture" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IdPrefix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IdPrefix" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetUpMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetUpMethods" signature="(System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TearDownMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TearDownMethods" signature="(System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequiresThread" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequiresThread" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Actions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNextId" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ApplyAttributesToTest" signature="(System.Reflection.ICustomAttributeProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyAttributesToTest" signature="(System.Collections.Generic.IEnumerable`1&lt;NUnit.Framework.Interfaces.IApplyToTest&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeInvalid" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PopulateTestNode" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetActionsForType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToXml" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestAssembly" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\TestAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.Assembly,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestAssembly,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Copy" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestCaseParameters" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestCaseParameters.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedResult" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExpectedResult" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestCaseData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestCaseResult" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Results\TestCaseResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FailCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WarningCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PassCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InconclusiveCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasChildren" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Children" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestCaseTimeoutException" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestCaseTimeoutException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestExecutionContext" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestExecutionContext.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="CurrentContext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentTest" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTicks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTicks" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentResult" signature="(NUnit.Framework.Internal.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OutWriter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OutWriter" signature="(System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestObject" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnError" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionStatus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionStatus" signature="(NUnit.Framework.Internal.TestExecutionStatus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Listener" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Listener" signature="(NUnit.Framework.Interfaces.ITestListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatcher" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatcher" signature="(NUnit.Framework.Internal.Execution.IWorkItemDispatcher)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelScope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelScope" signature="(NUnit.Framework.ParallelScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultFloatingPointTolerance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultFloatingPointTolerance" signature="(NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestWorker" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestWorker" signature="(NUnit.Framework.Internal.Execution.TestWorker)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RandomGenerator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MultipleAssertLevel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MultipleAssertLevel" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseTimeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseTimeout" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpstreamActions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentCulture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentCulture" signature="(System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentUICulture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentUICulture" signature="(System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentPrincipal" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentPrincipal" signature="(System.Security.Principal.IPrincipal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentValueFormatter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentValueFormatter" signature="(NUnit.Framework.Constraints.ValueFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSingleThreaded" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSingleThreaded" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentRepeatCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentRepeatCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateContextFromEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EstablishExecutionEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IncrementAssertCount" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IncrementAssertCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFormatter" signature="(NUnit.Framework.Constraints.ValueFormatterFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateIsolatedContext" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SendMessage" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AdhocTestMethod" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestFilter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestFilter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsEmpty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TopLevel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TopLevel" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExplicitMatch" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchParent" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchDescendant" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromXml" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromXml" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToXml" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Match" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExplicitMatch" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestFixture" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\TestFixture.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITypeInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestFixture,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Copy" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestFixtureParameters" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestFixtureParameters.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TypeArgs" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestFixtureData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestListener" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestListener.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="NULL" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestStarted" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFinished" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutput" signature="(NUnit.Framework.Interfaces.TestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(NUnit.Framework.Interfaces.TestMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestMethod" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\TestMethod.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="HasExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasChildren" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Tests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeTestResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestNameGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestNameGenerator.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(NUnit.Framework.Internal.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(NUnit.Framework.Internal.TestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFragmentList" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetText" signature="(NUnit.Framework.Internal.TestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendGenericTypeNames" signature="(System.Text.StringBuilder,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayString" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeSingleChar" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeCharInString" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeControlChar" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(NUnit.Framework.Internal.TestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestParameters" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestParameters.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="RunState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="(NUnit.Framework.Interfaces.RunState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OriginalArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OriginalArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgDisplayNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgDisplayNames" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestProgressReporter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TestProgressReporter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Web.UI.ICallbackEventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestStarted" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFinished" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutput" signature="(NUnit.Framework.Interfaces.TestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(NUnit.Framework.Interfaces.TestMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParent" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatAttributeValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestResult" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Results\TestResult.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultState" signature="(NUnit.Framework.Interfaces.ResultState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAttachments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OutWriter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertionResults" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PendingFailures" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorstAssertionStatus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTestAttachment" signature="(NUnit.Framework.Interfaces.TestAttachment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToXml" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetResult" signature="(NUnit.Framework.Interfaces.ResultState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetResult" signature="(NUnit.Framework.Interfaces.ResultState,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetResult" signature="(NUnit.Framework.Interfaces.ResultState,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordException" signature="(System.Exception,NUnit.Framework.Interfaces.FailureSite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordTearDownException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAndUnwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordTestCompletion" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="RecordAssertion" signature="(NUnit.Framework.Interfaces.AssertionResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordAssertion" signature="(NUnit.Framework.Interfaces.AssertionStatus,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordAssertion" signature="(NUnit.Framework.Interfaces.AssertionStatus,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateLegacyFailureMessage" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="AddReasonElement" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFailureElement" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddOutputElement" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddAssertionsElement" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertionStatusToResultState" signature="(NUnit.Framework.Interfaces.AssertionStatus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddAttachmentsElement" signature="(NUnit.Framework.Interfaces.TNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Exception,NUnit.Framework.Interfaces.FailureSite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestSuite" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Tests\TestSuite.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Tests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaintainTestOrder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaintainTestOrder" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneTimeSetUpMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneTimeSetUpMethods" signature="(System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneTimeTearDownMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneTimeTearDownMethods" signature="(System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasChildren" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlElementName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITypeInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestSuite,NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Sort" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="Add" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Copy" signature="(NUnit.Framework.Interfaces.ITestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeTestResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddToXml" signature="(NUnit.Framework.Interfaces.TNode,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckSetUpTearDownMethods" signature="(System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TestSuiteResult" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Results\TestSuiteResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FailCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PassCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WarningCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InconclusiveCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasChildren" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Children" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestSuite)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddResult" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MergeChildResult" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateResultState" signature="(NUnit.Framework.Interfaces.ResultState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TextMessageWriter" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\Execution\TextMessageWriter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="MaxLineLength" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxLineLength" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteMessageLine" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayDifferences" signature="(NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveTypeNameDifference" signature="(System.Object,System.Object,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayDifferences" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayDifferences" signature="(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayStringDifferences" signature="(System.String,System.String,System.Int32,System.Boolean,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteCollectionElements" signature="(System.Collections.IEnumerable,System.Int64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteExpectedLine" signature="(NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteExpectedLine" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteExpectedLine" signature="(System.Object,NUnit.Framework.Constraints.Tolerance)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualLine" signature="(NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteAdditionalLine" signature="(NUnit.Framework.Constraints.ConstraintResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteActualLine" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteCaretLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ThreadUtility" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ThreadUtility.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="BlockingDelay" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delay" signature="(System.Int32,System.Threading.WaitCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Abort" signature="(System.Threading.Thread,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Kill" signature="(System.Threading.Thread,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Kill" signature="(System.Threading.Thread,System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DislodgeThreadInNativeMessageWait" signature="(System.Threading.Thread,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckOnAbortingThread" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCurrentThreadNativeId" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="PostThreadCloseMessage" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Threading.WaitCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Thread" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NativeId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Threading.Thread,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TypeHelper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TypeHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetDisplayName" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetBestCommonType" signature="(System.Type,System.Type,System.Type&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNumeric" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertArgumentList" signature="(System.Object[],NUnit.Framework.Interfaces.IParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanDeduceTypeArgsFromArgs" signature="(System.Type,System.Object[],System.Type[]&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeclaredInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValueTuple" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTuple" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTupleInternal" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeNameWithoutGenerics" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanCast" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryCast" signature="(System.Object,T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TypeNameDifferenceResolver" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TypeNameDifferenceResolver.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResolveTypeNameDifference" signature="(System.Object,System.Object,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveTypeNameDifference" signature="(System.Type,System.Type,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetShortenedGenericParams" signature="(System.Type,System.Type,System.Collections.Generic.List`1&lt;System.String&gt;&amp;,System.Collections.Generic.List`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullyShortenTypeName" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShortenTypeNames" signature="(System.Type,System.Type,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTypeGeneric" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericTypeName" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReconstructGenericTypeName" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetShortenedGenericTypes" signature="(System.Type,System.Type,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.TypeWrapper" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\TypeWrapper.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Namespace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsGenericParameters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericTypeDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSealed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsStaticClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeGenericType" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericTypeDefinition" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDefined" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMethodWithAttribute" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethods" signature="(System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConstructor" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasConstructor" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Construct" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.ByteValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name="Create" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="()" line-rate="1" branch-rate="1" complexity="12">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.DecimalValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.DoubleValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.Int16ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.Int32ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.Int64ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.SByteValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.SingleValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.UInt16ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.UInt32ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.UInt64ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Internal.ValueGenerator`1" filename="D:\a\1\s\src\NUnitFramework\framework\Internal\ValueGenerator.cs" line-rate="1" branch-rate="1" complexity="14">
          <methods>
            <method name="CreateNotSupportedException" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateRange" signature="(System.Object,System.Object,NUnit.Framework.Internal.ValueGenerator/Step)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateStep" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryCreateStep" signature="(System.Object,NUnit.Framework.Internal.ValueGenerator/Step&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPositive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNegative" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TStep,System.Func`3&lt;T,TStep,T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Apply" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateRange" signature="()" line-rate="1" branch-rate="1" complexity="14">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Is" filename="D:\a\1\s\src\NUnitFramework\framework\Is.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Not" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="All" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Null" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negative" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Zero" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NaN" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unique" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BinarySerializable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlSerializable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ordered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SameAs" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterThan" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GreaterThanOrEqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtLeast" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessThan" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LessThanOrEqualTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtMost" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InstanceOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InstanceOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssignableFrom" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignableFrom" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssignableTo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignableTo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EquivalentTo" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubsetOf" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SupersetOf" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SamePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubPathOf" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SamePathOrUnder" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InRange" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AnyOf" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.LevelOfParallelismAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\LevelOfParallelismAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.List" filename="D:\a\1\s\src\NUnitFramework\framework\List.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Map" signature="(System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ListMapper" filename="D:\a\1\s\src\NUnitFramework\framework\ListMapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Property" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.MaxTimeAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\MaxTimeAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Interfaces.ICommandWrapper.Wrap" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.MultipleAssertException" filename="D:\a\1\s\src\NUnitFramework\framework\Exceptions\MultipleAssertException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.ITestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.NonParallelizableAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\NonParallelizableAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.NUnitAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\NUnitAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.OrderAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\OrderAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.PairwiseAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\PairwiseAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ParallelizableAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\ParallelizableAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Scope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.ParallelScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.PlatformAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\PlatformAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.PropertyAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\PropertyAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.RandomAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\RandomAttribute.cs" line-rate="1" branch-rate="1" complexity="47">
          <methods>
            <method name="Distinct" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Distinct" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt32,System.UInt32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int64,System.Int64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt64,System.UInt64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int16,System.Int16,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt16,System.UInt16,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Double,System.Double,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Single,System.Single,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Byte,System.Byte,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.SByte,System.SByte,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WeConvert" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Distinct" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Distinct" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(T,T,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IParameterDataSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt32,System.UInt32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.UInt32,System.UInt32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int64,System.Int64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Int64,System.Int64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt64,System.UInt64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.UInt64,System.UInt64,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int16,System.Int16,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Int16,System.Int16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Int16,System.Int16,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt16,System.UInt16,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.UInt16,System.UInt16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.UInt16,System.UInt16,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Double,System.Double,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Double,System.Double,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Single,System.Single,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Single,System.Single,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Byte,System.Byte,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Byte,System.Byte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Byte,System.Byte,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.SByte,System.SByte,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.SByte,System.SByte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.SByte,System.SByte,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Decimal,System.Decimal,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNext" signature="(System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanBeDistinct" signature="(System.Decimal,System.Decimal,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.RangeAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\RangeAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt32,System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int64,System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt64,System.UInt64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Double,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Single,System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.RepeatAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\RepeatAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.RequiresThreadAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\RequiresThreadAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Threading.ApartmentState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Interfaces.IApplyToTest.ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ResultStateException" filename="D:\a\1\s\src\NUnitFramework\framework\Exceptions\ResultStateException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.RetryAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\RetryAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(NUnit.Framework.Internal.Commands.TestCommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Commands.TestCommand,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.SequentialAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\SequentialAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.SetCultureAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\SetCultureAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.SetUICultureAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\SetUICultureAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.SetUpFixtureAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\SetUpFixtureAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValidFixtureType" signature="(NUnit.Framework.Interfaces.ITypeInfo,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.SingleThreadedAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\SingleThreadedAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ApplyToContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.StringAssert" filename="D:\a\1\s\src\NUnitFramework\framework\StringAssert.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotStartWith" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotStartWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotEndWith" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotEndWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqualIgnoringCase" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqualIgnoringCase" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqualIgnoringCase" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqualIgnoringCase" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatch" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatch" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.SuccessException" filename="D:\a\1\s\src\NUnitFramework\framework\Exceptions\SuccessException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestActionAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestActionAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Targets" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeforeTest" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTest" signature="(NUnit.Framework.Interfaces.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Author" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Author" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOf" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedResult" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyToTest" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestCaseAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestCaseAttribute.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="(NUnit.Framework.Interfaces.RunState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedResult" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExpectedResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExpectedResult" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Author" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Author" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOf" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludePlatform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludePlatform" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludePlatform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludePlatform" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParametersForTestCase" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformSpecialConversions" signature="(System.Object[],NUnit.Framework.Interfaces.IParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestCaseData" filename="D:\a\1\s\src\NUnitFramework\framework\TestCaseData.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetArgDisplayNames" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDescription" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetCategory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Explicit" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestCaseSourceAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestCaseSourceAttribute.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="MethodParams" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCasesFor" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseSource" signature="(NUnit.Framework.Interfaces.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnErrorAsParameter" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestContext" filename="D:\a\1\s\src\NUnitFramework\framework\TestContext.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CurrentContext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Out" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Result" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkerId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Random" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentRepeatCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Char[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFormatter" signature="(NUnit.Framework.Constraints.ValueFormatterFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTestAttachment" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFormatter" signature="(NUnit.Framework.Constraints.ValueFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.Test)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assertions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WarningCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PassCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InconclusiveCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Internal.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.Framework.Interfaces.IPropertyBag)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsKey" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestFixtureAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestFixtureAttribute.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="(NUnit.Framework.Interfaces.RunState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeArgs" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeArgs" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Author" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Author" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOf" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="BuildFrom" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestFixtureData" filename="D:\a\1\s\src\NUnitFramework\framework\TestFixtureData.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetArgDisplayNames" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Explicit" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignore" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestFixtureSourceAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestFixtureSourceAttribute.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Category" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildFrom" signature="(NUnit.Framework.Interfaces.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParametersFor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFixtureSource" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceMustBeStaticError" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BuildFrom" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestOfAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TestOfAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TestParameters" filename="D:\a\1\s\src\NUnitFramework\framework\TestParameters.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Names" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.String,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateModifiedInvariantCulture" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TheoryAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TheoryAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Throws" filename="D:\a\1\s\src\NUnitFramework\framework\Throws.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Exception" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetInvocationException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNullException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvalidOperationException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nothing" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InstanceOf" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InstanceOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.TimeoutAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\TimeoutAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext" signature="(NUnit.Framework.Internal.TestExecutionContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ValuesAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\ValuesAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateData" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullableEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.ValueSourceAttribute" filename="D:\a\1\s\src\NUnitFramework\framework\Attributes\ValueSourceAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataSource" signature="(NUnit.Framework.Interfaces.IParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataSourceValue" signature="(System.Reflection.MemberInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowInvalidDataSourceException" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.Framework.Warn" filename="D:\a\1\s\src\NUnitFramework\framework\Warn.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IssueWarning" signature="(NUnit.Framework.Constraints.ConstraintResult,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(System.Boolean,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(System.Func`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(System.Func`1&lt;System.Boolean&gt;,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(NUnit.Framework.TestDelegate,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unless" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(NUnit.Framework.Constraints.ActualValueDelegate`1&lt;TActual&gt;,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(System.Boolean,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(System.Func`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(System.Func`1&lt;System.Boolean&gt;,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="If" signature="(TActual,NUnit.Framework.Constraints.IResolveConstraint,System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncrementAssertCount" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="NUnit3.TestAdapter" line-rate="0.45699614890885754" branch-rate="0.27956989247311825" complexity="624">
      <classes>
        <class name="NUnit.VisualStudio.TestAdapter.AdapterSettings" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\AdapterSettings.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="MaxCpuCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxCpuCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultsDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetPlatform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetPlatform" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFrameworkVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFrameworkVersion" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAdapterPaths" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAdapterPaths" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectSourceInformation" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableAppDomain" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DesignMode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DesignMode" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestProperties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestProperties" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalTraceLevel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalTraceLevel" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Where" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Where" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutputXml" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutputXml" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseTestOutputXml" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultTimeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultTimeout" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NumberOfTestWorkers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NumberOfTestWorkers" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopyFiles" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopyFiles" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verbosity" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verbosity" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseVsKeepEngineRunning" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseVsKeepEngineRunning" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BasePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BasePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PrivateBinPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PrivateBinPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RandomSeed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RandomSeed" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RandomSeedSpecified" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RandomSeedSpecified" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectDataForEachTestSeparately" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectDataForEachTestSeparately" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InProcDataCollectorsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InProcDataCollectorsAvailable" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SynchronousEvents" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SynchronousEvents" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DomainUsage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DomainUsage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShowInternalProperties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShowInternalProperties" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseParentFQNForParametrizedTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseParentFQNForParametrizedTests" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseNUnitIdforTestCaseId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseNUnitIdforTestCaseId" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConsoleOut" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConsoleOut" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnError" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipNonTestAssemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipNonTestAssemblies" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VsTestCategoryType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VsTestCategoryType" signature="(NUnit.VisualStudio.TestAdapter.VsTestCategoryType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultTestNamePattern" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultTestNamePattern" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreFilter" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapWarningTo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapWarningTo" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseTestNameInConsoleOutput" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseTestNameInConsoleOutput" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(NUnit.VisualStudio.TestAdapter.DisplayNameOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullnameSeparator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullnameSeparator" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DumpXmlTestDiscovery" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DumpXmlTestDiscovery" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DumpXmlTestResults" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DumpXmlTestResults" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FreakMode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FreakMode" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.VisualStudio.TestAdapter.TestLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapTestCategory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SaveRandomSeed" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RestoreRandomSeed" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateNumberOfTestWorkers" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetInnerTextWithLog" signature="(System.Xml.XmlNode,System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInnerText" signature="(System.Xml.XmlNode,System.String,System.Boolean,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInnerTextAsInt" signature="(System.Xml.XmlNode,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInnerTextAsNullableInt" signature="(System.Xml.XmlNode,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInnerTextAsBool" signature="(System.Xml.XmlNode,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(System.String,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapWarningOutcome" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.CategoryList" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\CategoryList.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="LastNodeListCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNodeListCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,NUnit.VisualStudio.TestAdapter.IAdapterSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddRange" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessTestCaseProperties" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestCase,System.Boolean,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,NUnit.VisualStudio.TestAdapter.TraitsFeature/CachedTestCaseInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInternalProperty" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTraitsToCache" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,NUnit.VisualStudio.TestAdapter.TraitsFeature/CachedTestCaseInfo&gt;,System.String,NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCachedInfo" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,NUnit.VisualStudio.TestAdapter.TraitsFeature/CachedTestCaseInfo&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateCategoriesToVs" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Dump.DumpXml" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Dump\DumpXml.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.String,NUnit.VisualStudio.TestAdapter.Dump.IFile)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dump2File" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EnsurePathExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dump4Discovery" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dump4Execution" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RandomName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddTestEvent" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Dump.File" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Dump\DumpXml.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="WriteAllText" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DirectoryExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Dump.XmlNodeExtension" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Dump\DumpXml.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AsString" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.EmbeddedAssemblyResolution" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\EmbeddedAssemblyResolution.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="EnsureInitialized" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="CurrentDomain_AssemblyResolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetResourceAssemblyStream" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadToEnd" signature="(System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Internal.StackFrame" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Internal\Stackframe.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Internal.StackFrameParser" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Internal\StackframeParser.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="CreateStackFrameParser" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackFrame" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Internal.Stacktrace" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Internal\Stacktrace.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTopStackFrame" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Internal.StringExtensions" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Internal\Extensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsNullOrWhiteSpace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Internal.TypeExtensions" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Internal\Extensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTypeInfo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Metadata.AppDomainMetadataProvider" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Metadata\AppDomainMetadataProvider.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHelper" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetDeclaringType" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStateMachineType" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeclaringType" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStateMachineType" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Metadata.DirectReflectionMetadataProvider" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Metadata\DirectReflectionMetadataProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetDeclaringType" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStateMachineType" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetSingleMethod" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.IDisposable.Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.Metadata.TypeInfo" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\Metadata\TypeInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NavigationData" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NavigationData.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="FilePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValid" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NavigationDataProvider" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NavigationDataProvider.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.String,NUnit.VisualStudio.TestAdapter.ITestLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMetadataProvider" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,NUnit.VisualStudio.TestAdapter.ITestLogger,NUnit.VisualStudio.TestAdapter.Metadata.IMetadataProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoWithBreaker" signature="(System.Func`4&lt;System.String,System.String,System.String,System.Nullable`1&lt;NUnit.VisualStudio.TestAdapter.Metadata.TypeInfo&gt;&gt;,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetSessionData" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetSessionData" signature="(System.Nullable`1&lt;NUnit.VisualStudio.TestAdapter.Metadata.TypeInfo&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NTrait" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TraitsFeature.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NTraitNameComparer" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TfsTestFilter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equals" signature="(NUnit.VisualStudio.TestAdapter.NTrait,NUnit.VisualStudio.TestAdapter.NTrait)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(NUnit.VisualStudio.TestAdapter.NTrait)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnit3TestDiscoverer" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnit3TestDiscoverer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessTestCases" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitResults,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink,NUnit.VisualStudio.TestAdapter.TestConverter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnit3TestExecutor" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnit3TestExecutor.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="RunContext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunContext" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FrameworkHandle" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FrameworkHandle" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TfsFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TfsFilter" signature="(NUnit.VisualStudio.TestAdapter.TfsTestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutputXmlFolder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutputXmlFolder" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dump" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutor.Cancel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InitializeForExecution" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAssembly" signature="(System.String,System.Linq.IGrouping`2&lt;System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,NUnit.Engine.TestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupDump" signature="(System.String,System.Linq.IGrouping`2&lt;System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestFilterBuilder" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateTestOutputFolder" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="StopRun" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.DiscoveryExtensions" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\DiscoveryExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestConverter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestConverter" signature="(NUnit.VisualStudio.TestAdapter.TestConverter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Convert" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitResults,NUnit.VisualStudio.TestAdapter.ITestLogger,System.String,NUnit.VisualStudio.TestAdapter.IAdapterSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitAttachment" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEvent.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FilePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitEngineAdapter" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitEngineAdapter.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="TestEngine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEngine" signature="(NUnit.Engine.ITestEngine)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runner" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runner" signature="(NUnit.Engine.ITestRunner)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EngineEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="InitializeSettingsAndLogging" signature="(NUnit.VisualStudio.TestAdapter.IAdapterSettings,NUnit.VisualStudio.TestAdapter.ITestLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateRunner" signature="(NUnit.Engine.TestPackage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explore" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Explore" signature="(NUnit.Engine.TestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Run" signature="(NUnit.Engine.ITestEventListener,NUnit.Engine.TestFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetService" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="StopRun" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CloseRunner" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GenerateTestOutput" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitResults,System.String,NUnit.VisualStudio.TestAdapter.NUnit3TestExecutor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitEventWrongTypeException" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEvent.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitFailure" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEvent.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stacktrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitProperty" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEvent.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitResults" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitResults.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="TopNode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunnable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullTopNode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasNoNUnitTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WhatSkipReason" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestCase" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestCase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsTestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsParameterizedMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunState" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestEvent" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEvent.cs" line-rate="1" branch-rate="1" complexity="18">
          <methods>
            <method name="IsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Label" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsIgnored" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnitAttachments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestType" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="Result" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="Site" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="EndTime" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestEventHeader" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEventHeader.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Node" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestEventStartTest" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEventStartTest.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventForXml)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestEventSuiteFinished" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEventSuiteFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReasonMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailureMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasFailure" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventForXml)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestEventTestCase" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEventTestCase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Failure" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReasonMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasFailure" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventForXml)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestEventTestOutput" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestEventTestOutput.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Stream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsProgressStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsErrorStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullOrEmptyStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Content" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventForXml)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestNode" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEngine\NUnitTestNode.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Node" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Node" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Id" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNull" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitEventListener" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitEventListener.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,NUnit.VisualStudio.TestAdapter.ITestConverter,NUnit.VisualStudio.TestAdapter.INUnit3TestExecutor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestEvent" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finalize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TestStarted" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventStartTest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFinished" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SuiteFinished" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventSuiteFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestOutput" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitTestAdapter" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitTestAdapter.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="Settings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Settings" signature="(NUnit.VisualStudio.TestAdapter.IAdapterSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AdapterVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AdapterVersion" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnitEngineAdapter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NUnitEngineAdapter" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitEngineAdapter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestLog" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestLog" signature="(NUnit.VisualStudio.TestAdapter.TestLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkDir" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkDir" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunningUnderIde" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForbiddenFolders" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForbiddenFolders" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Initialize" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeForbiddenFolders" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="SetCurrentWorkingDirectory" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="CheckDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestPackage" signature="(System.String,System.Linq.IGrouping`2&lt;System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetTestParameters" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CleanUpRegisteredChannels" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Unload" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.NUnitTestFilterBuilder" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\NUnitTestFilterBuilder.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(NUnit.Engine.ITestFilterService)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertTfsFilterToNUnitFilter" signature="(NUnit.VisualStudio.TestAdapter.ITfsTestFilter,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterByWhere" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterByList" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.TestConverter" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TestConverter.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="CollectSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraitsCache" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(NUnit.VisualStudio.TestAdapter.ITestLogger,System.String,NUnit.VisualStudio.TestAdapter.IAdapterSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ConvertTestCase" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCachedTestCase" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetVsTestResults" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestCase,System.Collections.Generic.ICollection`1&lt;NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestOutput&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeTestCaseFromXmlNode" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDisplayName" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeTestResultFromLegacyXmlNode" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestCase,System.Collections.Generic.IEnumerable`1&lt;NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestOutput&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetBasicResult" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEvent,System.Collections.Generic.IEnumerable`1&lt;NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestOutput&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FillResultFromOutputNodes" signature="(System.Collections.Generic.IEnumerable`1&lt;NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEventTestOutput&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParseAttachments" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestOutcome" signature="(NUnit.VisualStudio.TestAdapter.NUnitEngine.INUnitTestEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TestResults" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestResults" signature="(System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseResult" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConsoleOutput" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConsoleOutput" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.TestLogger" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TestLogger.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="MessageLogger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verbosity" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verbosity" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitSettings" signature="(NUnit.VisualStudio.TestAdapter.IAdapterSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Error" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Error" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warning" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warning" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Info" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Debug" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.TestMessageLevel,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.TestMessageLevel,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.TfsTestFilter" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TfsTestFilter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="TfsTestCaseFilterExpression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckFilter" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckFilter" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyValueProvider" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraitContains" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="LocalPropertyProvider" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyProvider" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraitProvider" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.TraitsFeature" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TraitsFeature.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AddTrait" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTraitsFromTestNode" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,NUnit.VisualStudio.TestAdapter.NUnitEngine.NUnitTestCase,System.Collections.Generic.IDictionary`2&lt;System.String,NUnit.VisualStudio.TestAdapter.TraitsFeature/CachedTestCaseInfo&gt;,NUnit.VisualStudio.TestAdapter.ITestLogger,NUnit.VisualStudio.TestAdapter.IAdapterSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTraits" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCategories" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Explicit" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.TryParse" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\TryParse.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="EnumTryParse" signature="(System.String,T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NUnit.VisualStudio.TestAdapter.XmlHelper" filename="D:\repos\NUnit\nunit3-vs-adapter\src\NUnitTestAdapter\XmlHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateTopLevelElement" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateXmlNode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToXml" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddAttribute" signature="(System.Xml.XmlNode,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddElement" signature="(System.Xml.XmlNode,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddElementWithCDataSection" signature="(System.Xml.XmlNode,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttribute" signature="(System.Xml.XmlNode,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttribute" signature="(System.Xml.XmlNode,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttribute" signature="(System.Xml.XmlNode,System.String,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttribute" signature="(System.Xml.XmlNode,System.String,System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="TestNUnit" line-rate="1" branch-rate="0.75" complexity="14">
      <classes>
        <class name="TestNUnit.TestColassVectorWithNUnit" filename="d:\work\school\cursuri\ASSE\2021-2022\Laborator\Laborator 2\DemoNunitAndCoverage\TestNUnit\NUnitTest.cs" line-rate="1" branch-rate="0.75" complexity="14">
          <methods>
            <method name="TestConstructorWithLegalSize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestMethodConstructorWithNegativeLength" signature="()" line-rate="1" branch-rate="0.5" complexity="2">
              <lines>
                <line number="24" hits="1" branch="false" />
                <line number="26" hits="2" branch="true" condition-coverage="50% (1/2)" />
                <line number="27" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestMethodWithLegalSize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestLength" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestConstructorNullContents" signature="()" line-rate="1" branch-rate="0.5" complexity="2">
              <lines>
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="2" branch="true" condition-coverage="50% (1/2)" />
                <line number="49" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestConstructorEmptyContents" signature="()" line-rate="1" branch-rate="0.5" complexity="2">
              <lines>
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="2" branch="true" condition-coverage="50% (1/2)" />
                <line number="56" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestConstructorWithContents" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="8" branch="true" condition-coverage="100% (2/2)" />
                <line number="65" hits="3" branch="false" />
                <line number="66" hits="3" branch="false" />
                <line number="67" hits="3" branch="false" />
                <line number="68" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIndexer" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines>
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="76" hits="8" branch="true" condition-coverage="100% (2/2)" />
                <line number="77" hits="3" branch="false" />
                <line number="78" hits="3" branch="false" />
                <line number="79" hits="3" branch="false" />
                <line number="80" hits="8" branch="true" condition-coverage="100% (2/2)" />
                <line number="81" hits="3" branch="false" />
                <line number="82" hits="3" branch="false" />
                <line number="83" hits="3" branch="false" />
                <line number="84" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="26" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="27" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="49" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="56" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="8" branch="true" condition-coverage="100% (2/2)" />
            <line number="65" hits="3" branch="false" />
            <line number="66" hits="3" branch="false" />
            <line number="67" hits="3" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="76" hits="8" branch="true" condition-coverage="100% (2/2)" />
            <line number="77" hits="3" branch="false" />
            <line number="78" hits="3" branch="false" />
            <line number="79" hits="3" branch="false" />
            <line number="80" hits="8" branch="true" condition-coverage="100% (2/2)" />
            <line number="81" hits="3" branch="false" />
            <line number="82" hits="3" branch="false" />
            <line number="83" hits="3" branch="false" />
            <line number="84" hits="1" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
  </packages>
</coverage>